/*
 * 
 *   Copyright 2017  NHS Digital
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 *  
 */
package uk.nhs.digital.safetycase.ui;

import java.util.ArrayList;
import javax.swing.JDialog;
import javax.swing.JOptionPane;
import uk.nhs.digital.projectuiframework.smart.SmartProject;
import uk.nhs.digital.safetycase.data.MetaFactory;
import uk.nhs.digital.safetycase.data.Persistable;
import uk.nhs.digital.safetycase.data.PersistableFactory;
import uk.nhs.digital.safetycase.data.SystemFunction;

/**
 *
 * @author damian
 */
public class SystemFunctionEditorPanel extends javax.swing.JPanel {

    private JDialog parent = null;
    private SystemFunction editor = null;
     private ArrayList<SystemFunction> systemFunctions = new ArrayList<>();
     private int sfID = -1;
    private int systemID = -1;
     private int projectID = -1;
    /**
     * Creates new form SystemFunctionEditorPanel
     */
    public SystemFunctionEditorPanel(SystemFunction sf, uk.nhs.digital.safetycase.data.System s) {
        initComponents();
         if(sf != null)
          sfID = sf.getId();
        if(s != null)
          systemID = s.getId();
        try {
            //Collection<Persistable> sfc = MetaFactory.getInstance().getFactory("SystemFunction").getEntries();
            ArrayList<Persistable> sfal = MetaFactory.getInstance().getChildren("SystemFunction", "SystemID", systemID);
             if (sfal != null) {
            for (Persistable p : sfal) {
                SystemFunction c = (SystemFunction)p;
                //Do not add the systemfunction itself. to the stop the systemfunction being it's own parent
                if(c.getId() == sfID)
                    continue;
                systemFunctions.add(c);
                SystemFunctionComboBox.addItem(c);
            }
            if(sf != null){
                this.nameTextField.setText(sf.getTitle());
                this.descriptionTextArea.setText(sf.getAttributeValue("Description"));
                // check if the prent is null then dont select any thing in combobox
                if(sf.getAttributeValue("ParentSystemFunctionID").equals("-1"))
                     SystemFunctionComboBox.setSelectedIndex(-1);
                else
                {
                    MetaFactory mf = MetaFactory.getInstance();
                    PersistableFactory<SystemFunction> pfsf = mf.getFactory("SystemFunction");
                    SystemFunction sfunction = pfsf.get(Integer.parseInt(sf.getAttributeValue("ParentSystemFunctionID")));
                    SystemFunctionComboBox.setSelectedItem(sf);
                }            
            }
            else
            SystemFunctionComboBox.setSelectedIndex(-1);
             }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed to load function for editing", "Load failed", JOptionPane.ERROR_MESSAGE);
            SmartProject.getProject().log("Failed to set load object in FunctionEditor", e);            
        }
    }    
    
    void setData(String n, String v, String s, String d) {
        nameTextField.setText(n);
        descriptionTextArea.setText(d);        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        descriptionTextArea = new javax.swing.JTextArea();
        cancelButton = new javax.swing.JButton();
        okButton = new javax.swing.JButton();
        SystemFunctionComboBox = new javax.swing.JComboBox();

        setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel1.setText("Name");

        jLabel3.setText("ParentFunction");

        jLabel4.setText("Description");

        descriptionTextArea.setColumns(20);
        descriptionTextArea.setRows(5);
        jScrollPane1.setViewportView(descriptionTextArea);

        cancelButton.setText("Cancel");
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });

        okButton.setText("OK");
        okButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(okButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cancelButton))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                        .addGap(0, 0, Short.MAX_VALUE)
                                        .addComponent(jLabel3)))
                                .addGap(18, 18, 18))
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addGap(40, 40, 40)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jScrollPane1)
                            .addComponent(nameTextField, javax.swing.GroupLayout.DEFAULT_SIZE, 480, Short.MAX_VALUE)
                            .addComponent(SystemFunctionComboBox, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(SystemFunctionComboBox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cancelButton)
                    .addComponent(okButton))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents
    SystemFunctionEditorPanel setParent(JDialog p) {
        parent = p;
        return this;
    }
    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        this.revalidate();
         parent.dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void okButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonActionPerformed

        
        SystemFunction sf = null;
        if (sfID == -1) {
                sf = new uk.nhs.digital.safetycase.data.SystemFunction();
        } else {
            try {
                MetaFactory mf = MetaFactory.getInstance();
                PersistableFactory<uk.nhs.digital.safetycase.data.SystemFunction> pfsf = mf.getFactory("SystemFunction");
                sf = pfsf.get(sfID);
            }
            catch (Exception e) {
                e.printStackTrace();
                return;
            }            
        } 
        sf.setAttribute("Name", nameTextField.getText());
        sf.setAttribute("Description", descriptionTextArea.getText());
        sf.setAttribute(("SystemID"), systemID);
        if(SystemFunctionComboBox.getSelectedIndex() != -1)
        {
            SystemFunction sfs = (SystemFunction)SystemFunctionComboBox.getSelectedItem();
            sf.setAttribute(("ParentSystemFunctionID"), sfs.getId());
        }
        try {
            MetaFactory mf = MetaFactory.getInstance();
           // sf.setAttribute("ProjectID", mf.getUIProject().getCurrentProjectID());
            PersistableFactory<uk.nhs.digital.safetycase.data.SystemFunction> pfsf = mf.getFactory("SystemFunction");
            pfsf.put(sf);
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Failed to save Function for editing", "Save failed", JOptionPane.ERROR_MESSAGE);
            SmartProject.getProject().log("Failed to save object in SystemFunctionEditorPanel", e);
        }
        this.parent.dispose();
    }//GEN-LAST:event_okButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox SystemFunctionComboBox;
    private javax.swing.JButton cancelButton;
    private javax.swing.JTextArea descriptionTextArea;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton okButton;
    // End of variables declaration//GEN-END:variables
}
