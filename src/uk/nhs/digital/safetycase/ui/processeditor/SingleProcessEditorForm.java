/*
 * 
 *   Copyright 2017  NHS Digital
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 *  
 */
package uk.nhs.digital.safetycase.ui.processeditor;

import java.awt.Component;
import java.util.ArrayList;
import java.util.Collection;
import javax.swing.JDialog;
import uk.nhs.digital.projectuiframework.ui.EditorComponent;
import uk.nhs.digital.safetycase.data.MetaFactory;
import uk.nhs.digital.safetycase.data.Persistable;
import uk.nhs.digital.safetycase.data.PersistableFactory;
import uk.nhs.digital.safetycase.data.Process;
import uk.nhs.digital.safetycase.data.ProcessStep;

/**
 *
 * @author damian
 */
public class SingleProcessEditorForm 
        extends javax.swing.JPanel 
        implements uk.nhs.digital.safetycase.ui.PersistableEditor
{

    private JDialog parent = null;
//    private ProcessEditor editor = null;
    
    private Process process = null;
    private ArrayList<ProcessStep> steps = null;
    private int newObjectProjectId = -1;
    private EditorComponent editorComponent = null;
    /**
     * Creates new form SingleProcessEditorForm
     */
    public SingleProcessEditorForm(int pid)
            throws Exception
    {
        initComponents();
        
        PersistableFactory<Process> pfp = (PersistableFactory<Process>)MetaFactory.getInstance().getFactory("Process");
        if (pid != -1) {
            process = pfp.get(pid);
            processEditor.setData(process.getAttributeValue("Name"), process.getAttributeValue("Version"), process.getAttributeValue("Source"), 
                    process.getAttributeValue("Description"));
            processEditor.setProcessId(pid);
            ArrayList<Persistable> ps = MetaFactory.getInstance().getChildren("ProcessStep", "ProcessID", pid);
            stepList.populateList(ps);
        }
    }

    public SingleProcessEditorForm()
            throws Exception
    {
        initComponents();
    }
    
    SingleProcessEditorForm setParent(JDialog p) {
        parent = p;
        processEditor.setParent(p);
        return this;
    }
    
    
//    SingleProcessEditorForm setEditor(ProcessEditor p) { 
//        editor = p; 
//        processEditor.setEditor(p);
//        return this;
//    }    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jSplitPane1 = new javax.swing.JSplitPane();
        stepList = new uk.nhs.digital.safetycase.ui.processeditor.ProcessEditorStepList();
        processEditor = new uk.nhs.digital.safetycase.ui.processeditor.SingleProcessEditorPanel();

        setLayout(new java.awt.CardLayout());

        jSplitPane1.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        jSplitPane1.setRightComponent(stepList);
        jSplitPane1.setLeftComponent(processEditor);

        add(jSplitPane1, "card2");
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSplitPane jSplitPane1;
    private uk.nhs.digital.safetycase.ui.processeditor.SingleProcessEditorPanel processEditor;
    private uk.nhs.digital.safetycase.ui.processeditor.ProcessEditorStepList stepList;
    // End of variables declaration//GEN-END:variables

    @Override
    public void setPersistableObject(Persistable p) {
        try {
            process = (Process)p;
            processEditor.setProcessId(process.getId());
            processEditor.setData(process.getAttributeValue("Name"), process.getAttributeValue("Version"), 
                    process.getAttributeValue("Source"), process.getAttributeValue("Description"));
            processEditor.populateLinks();
            ArrayList<Persistable> ps = MetaFactory.getInstance().getChildren("ProcessStep", "ProcessID", process.getId());
            stepList.populateList(ps);
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }

    @Override
    public Component getComponent() {
        return this;
    }

    @Override
    public void setEditorComponent(EditorComponent ed) {
        editorComponent = ed;
    }

    @Override
    public void setNewObjectProjectId(int i) {
        newObjectProjectId = i;
    }
}
