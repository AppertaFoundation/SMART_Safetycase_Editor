/*
 * 
 *   Copyright 2018  NHS Digital
 * 
 *    Licensed under the Apache License, Version 2.0 (the "License");
 *    you may not use this file except in compliance with the License.
 *    You may obtain a copy of the License at
 * 
 *        http://www.apache.org/licenses/LICENSE-2.0
 * 
 *    Unless required by applicable law or agreed to in writing, software
 *    distributed under the License is distributed on an "AS IS" BASIS,
 *    WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *    See the License for the specific language governing permissions and
 *    limitations under the License.
 *  
 */
package uk.nhs.digital.safetycase.ui.ekit;

import com.hexidec.ekit.EkitCore;
import java.awt.Frame;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.event.ActionEvent;
import javax.swing.JFrame;
import javax.swing.SwingUtilities;

/**
 *
 * @author murff
 */
public class HtmlEditorPanel
        extends javax.swing.JPanel 
        implements NotificationTarget
{
    public static final String TOOLBAR = "NW|NS|OP|SV|PR|SP|CT|CP|PS|SP|UN|RE|SP|BL|IT|UD|SP|FN|SP|UC|SP|LK|SP|SR";
    private EkitCore viewer = null;
    private javax.swing.JButton editButton = null;
    /**
     * Creates new form HtmlEditorPanel
     */
    public HtmlEditorPanel() {
//        initComponents();
//        editButtonPanel = new javax.swing.JPanel();
        editButton = new javax.swing.JButton();
//        viewerPanel = new uk.nhs.digital.safetycase.ui.ekit.HtmlViewerPanel();
        viewer = new EkitCore(false, null, null, null, null, null, true, false, true, true, "en", "UK", false, false, true, false, TOOLBAR, true, false);
        viewer.getTextPane().setEditable(false);
        viewer.getTextPane().setHighlighter(null);
        editButton.setText("Edit");
        editButton.addActionListener((java.awt.event.ActionEvent evt) -> {
            editButtonActionPerformed(evt);
        });
        GridBagConstraints gbc = new GridBagConstraints();
        setLayout(new GridBagLayout());
        gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.anchor = GridBagConstraints.NORTH;
        gbc.gridheight = 1;
        gbc.gridwidth = 1;
        gbc.weightx = 0.0;
        gbc.weighty = 0.0;
        gbc.gridx = 0;      
        gbc.gridy = 0;        
        add(editButton, gbc);
        gbc = new GridBagConstraints();
        gbc.fill = GridBagConstraints.BOTH;
        gbc.anchor = GridBagConstraints.SOUTH;
        gbc.gridheight = GridBagConstraints.REMAINDER;
        gbc.gridwidth = GridBagConstraints.REMAINDER;
        gbc.weightx = 1.0;
        gbc.weighty = 1.0;
        gbc.gridx = 0;
        gbc.gridy = 1;
        add(viewer, gbc);
        JFrame.setDefaultLookAndFeelDecorated(false);
        
        
    }

    private void editButtonActionPerformed(ActionEvent evt) {
        (new EkitDialog((Frame)SwingUtilities.windowForComponent(this), viewer.getDocumentText(), this)).setVisible(true);
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setAlignmentX(0.0F);
        setLayout(new java.awt.BorderLayout());
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    public void setText(String s) {
        if (s == null)
            return;
       viewer.setDocumentText(s);
       viewer.getTextPane().setEditable(false);
    }

    public String getBodyText() { return viewer.getDocumentBody(); }
    
    public String getText() { return viewer.getDocumentText(); }
    
    @Override
    public void notify(String s) {
        setText(s);
    }
}
